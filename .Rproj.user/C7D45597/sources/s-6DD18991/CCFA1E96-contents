# Modelo AHP (Analytical Hierarchy Process) {#ahp}

## Objetivo

El objetivo aquí es parecido al tema anterior (electre) y consiste en tomar una decisión multicriterio.

De acuerdo con lo anterior, esta sección es para el "problema" de seleccionar entre Tom, Dick, & Harry como líder (problema de selección de personal):
https://en.wikipedia.org/wiki/Analytic_hierarchy_process_%E2%80%93_leader_example

El ejemplo concreto aquí es de Nicole Radziwill:
http://qualityandinnovation.com/2016/01/04/analytic-hierarchy-process-ahp-with-the-ahp-package/

## Cargar los paquetes ahp y data.tree

- AHP significa 'analytical hierarchy process' y es para la toma de decisiones "multicriterio" (MCDA, multiple criteria decision analysis).
- Cuando se carga el paquete ahp (library(ahp)), se carga automáticamente también el paquete data.tree (y otros, como p.ej. el paquete DiagrammeR, que a su vez requiere del paquete influenceR...)

```{r}
library(ahp)
```

- Consultar el manual para el paquete ahp

```{r}
?ahp
```

## Mostrar los archivos (ejemplos), que vienen con este paquete ahp y cargar uno de estos

- list.files(system.file("extdata", package="ahp"))

```{r}
list.files(system.file("extdata", package="ahp"))
```

Aquí, seleccionar el archivo Tom, Dick and Harry y asignar su contenido a una variable ahpFile:

ahpFile <- system.file("extdata", "tom_dick_harry.ahp", package="ahp")

Este archivo tiene formulado el problema...

```{r}
ahpFile <- system.file("extdata", "tom_dick_harry.ahp", package="ahp")
```

- Mostrar el contenido de este archivo de texto (formato Yaml): cat(readChar(ahpFile, file.info(ahpFile)$size))

```{r}
cat(readChar(ahpFile, file.info(ahpFile)$size))
```

- Cargar el archivo: tomdickharryAhp <- Load(ahpFile)
- Observar la clase del objeto

```{r}
tomdickharryAhp <- Load(ahpFile)
#class(tomdickharryAhp)
```

- Mostrar los criterios de decisión y las alternativas en la pantalla, utilizando la función print(): print(tomdickharryAhp)

```{r}
print(tomdickharryAhp)
```

## Aplicar ahp, utilizando la función calculate()

```{r}
?Calculate
Calculate(tomdickharryAhp)
```

## Mostrar el problema de decisión gráficamente (como árbol)

- Visualizar el problema: Visualize(tomdickharryAhp)

```{r}
Visualize(tomdickharryAhp)
```

## Analizar los resultados de ahp

- Mostrar los resultados en una tabla, utilizando la función Analyze() y AnalyzeTable()

```{r}
Analyze(tomdickharryAhp)
# una forma para mostrar la tabla de una forma más bonita
# AnalyzeTable(tomdickharryAhp)
```

Conclusión: Se debe seleccionar Dick, ya que es la persona que obtuvo el mayor "puntaje" (48,1%), tomando en cuenta todos los criterios de selección.

### Nota: solución alternativa

Una forma alternativa para cargar los datos consiste en utilizar un archivo yaml (archivo de texto), donde se formula el problema, en términos de las matrices disponibles en:
https://en.wikipedia.org/wiki/Analytic_hierarchy_process_%E2%80%93_leader_example

getwd()

Cambiar al directorio de trabajo, donde se encuentra el archivo de texto con el problema formulado, incluyendo dos secciones con sus datos principalmente: 

**Goal Section**

setwd('C:\\Users\\xyz\\Documents\\directorioR')
ahpFile2 <- Load('tom_dick_harry.txt')
Calculate(ahpFile2)

**Mostrar el problema de decisión gráficamente (como árbol)**

Visualize(ahpFile2)

**Mostrar los resultados en una tabla**

Analyze(ahpFile2)


