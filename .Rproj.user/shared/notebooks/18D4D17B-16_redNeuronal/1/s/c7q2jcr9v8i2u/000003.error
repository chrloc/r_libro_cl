{"frames":[{"func":"neuralnet(Creditability ~ ., data = train, hidden = c(10, 5), \n    linear.output = FALSE, act.fct = \"tanh\", threshold = 0.01)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"lapply(1:rep, function(i) {\n    if (lifesign != \"none\") {\n        lifesign <- display(hidden, threshold, rep, i, lifesign)\n    } ...","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"FUN(X[[i]], ...)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"calculate.neuralnet(learningrate.limit = learningrate.limit, \n    learningrate.factor = learningrate.factor, covariate = covariate, \n    response = response, data = data, model.list = model.list, \n    threshold = threshold, lifesign.step = lifesign.step, stepmax = stepmax,  ...","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"rprop(weights = weights, threshold = threshold, response = response, \n    covariate = covariate, learningrate.limit = learningrate.limit, \n    learningrate.factor = learningrate.factor, stepmax = stepmax, \n    lifesign = lifesign, lifesign.step = lifesign.step, act.fct = act.fct,  ...","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"plus(gradients, gradients.old, weights, nrow.weights, ncol.weights, \n    learningrate, learningrate.factor, learningrate.limit, exclude)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"relist(weights, nrow.weights, ncol.weights)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0}],"message":"no loop for break/next, jumping to top level"}